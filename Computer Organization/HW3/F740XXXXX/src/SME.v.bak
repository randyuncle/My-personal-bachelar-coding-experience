module SME(clk,reset,chardata,isstring,ispattern,valid,match,match_index);
input clk;
input reset;
input [7:0] chardata;
input isstring;
input ispattern;
output match;
output [4:0] match_index;
output valid;
reg match;
reg [4:0] match_index;
reg valid;

reg [7:0] words[31:0], pattern[7:0];
reg [7:0] strCount, patCount;
reg start, last;
initial begin
  int i;

//save input
always @(posedge clk or posedge rst) begin
  if(rst) begin
    for(i = 0 ; i < 32 ; i=i+1) begin
      words[i] = 8'd0;
      if(i < 32'd8)
        pattern[i] = 8'd0;
    end
    start = 0;
    last = 0;
    strCount = 0;
    patCount = 0;
  end
  else begin
    if(isstring) begin
      word[strCount] = chardata;
      strCount = strCount + 1;
    end
    else if(ispattern) begin
      pattern[patCount] = chardata;
      
      if(chardata == 8'h5E)
        start = 1;
      else
        start = start;
      
      if(chardata == 8'h24)
        last = 1;
      else
        last = last;
      
      patCount = patCount + 1;
    end
    else begin
      strCount = strCount;
      patCount = patCount;
    end
end

//pattern and string match
always @(ispattern) begin
  if(!ispattern) begin
    for(i = 0 ; i < patCount ; i=i+1) begin
      
    end
  end
end

//checking the match
always @(valid) begin
  if(valid) begin
    
  end
end

end
endmodule
